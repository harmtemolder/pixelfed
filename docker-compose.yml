version: '3.7'

# https://github.com/pixelfed/pixelfed
#
# In order to set configuration, please use a .env file in
# your compose project directory (the same directory as your
# docker-compose.yml), and set database options, application
# name, key, and other settings there.
# A list of available settings is available in .env.example
#
# The services should scale properly across a swarm cluster
# if the volumes are properly shared between cluster members.
#
# Run with `docker-compose --env-file=../.env up`
#
# Uncomment the `build` property in the `pixelfed` and `pixelfed_worker`
# services to build the image yourself, instead of using
# https://hub.docker.com/r/pixelfed/pixelfed

networks:
  adminer:
    external: true
    name: adminer
  external:
    driver: bridge
    name: external
  pixelfed:
    driver: bridge
    internal: true
    name: pixelfed

services:
  # App (https://hub.docker.com/r/pixelfed/pixelfed)
  pixelfed:
    build:
      context: .
      dockerfile: contrib/docker/Dockerfile.apache
    container_name: pixelfed
    depends_on:
      pixelfed_db:
        condition: service_healthy
      redis:
        condition: service_started
    env_file: ../.env
    expose:
      - '80'
    image: pixelfed/pixelfed:latest
    labels:
      traefik.enable: true
      traefik.http.routers.pixelfed.entrypoints: websecure
      traefik.http.routers.pixelfed.rule: Host(`static.78.88.108.65.clients.your-server.de`)
    networks:
      - external
      - pixelfed
    restart: unless-stopped
    volumes:
      - pixelfed_storage:/var/www/storage
      - pixelfed_bootstrap:/var/www/bootstrap
      - ./../.env:/var/www/.env
      #- contrib/docker/php.override.ini:/etc/php/8.1/apache2/conf.d/php.override.ini

  # Worker (https://hub.docker.com/r/pixelfed/pixelfed)
  pixelfed_worker:
    build:
      context: .
      dockerfile: contrib/docker/Dockerfile.apache
    container_name: pixelfed_worker
    depends_on:
      pixelfed:
        condition: service_started
      pixelfed_db:
        condition: service_healthy
      redis:
        condition: service_started
    entrypoint: [ /var/www/contrib/docker/worker.apache.sh ]
    env_file: ../.env
    healthcheck:
      test: php artisan horizon:status | grep running
      interval: 60s
      timeout: 5s
      retries: 1
    image: pixelfed/pixelfed:latest
    networks:
      - pixelfed
    restart: unless-stopped
    volumes:
      - pixelfed_storage:/var/www/storage
      - pixelfed_bootstrap:/var/www/bootstrap

  # DB (https://hub.docker.com/_/mariadb)
  pixelfed_db:
    command:
      - --default-authentication-plugin=mysql_native_password
      - --log-bin=false # https://mariadb.com/kb/en/replication-and-binary-log-system-variables/#log_bin
      - --log-warnings=1 # To disable "Access denied" errors from `healthcheck`
    container_name: pixelfed_db
    env_file: ../.env
    environment:
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_RANDOM_ROOT_PASSWORD=true
    healthcheck:
      # https://github.com/MariaDB/mariadb-docker/blob/45bb36b2292191a93d2b7a0a4d0eafaa554ba8d5/10.10/healthcheck.sh
      test: [ CMD, /usr/local/bin/healthcheck.sh, --connect ]
      interval: 5s
      timeout: 5s
      retries: 4
      start_period: 10s
    image: mariadb:10.10
    networks:
      - adminer
      - pixelfed
    restart: unless-stopped
    volumes:
      - pixelfed_db:/var/lib/mysql

  # Cache (https://hub.docker.com/_/redis)
  redis:
    command:
      - --requirepass ${REDIS_PASSWORD}
    container_name: redis
    env_file: ../.env
    image: redis:7.0
    networks:
      - pixelfed
    restart: unless-stopped
    volumes:
      - pixelfed_redis:/data

volumes:
  pixelfed_bootstrap:
  pixelfed_db:
  pixelfed_redis:
  pixelfed_storage:
